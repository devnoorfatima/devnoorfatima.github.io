{"version":3,"sources":["header.js","action.js","option.js","options.js","submit.js","Option.modal.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","subtitle","defaultProps","Action","disabled","hasOptions","onClick","handlePick","Option","count","optionText","e","handleDeleteOption","Options","handleDeleteAll","options","map","option","index","src_option","key","Input","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAddOption","bind","assertThisInitialized","state","error","undefined","preventDefault","target","elements","value","trim","setState","onSubmit","type","name","Component","OptionModal","lib_default","isOpen","selectedOption","onRequestClose","handleRemoveModal","contentLabel","closeTimeoutMS","App","json","localStorage","getItem","JSON","parse","prevProps","prevState","length","stringify","setItem","console","log","optionToRemove","filter","randomNum","Math","floor","random","indexOf","concat","header","action","src_submit","Option_modal","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d6b48e0.chunk.js","sourcesContent":["import React from 'react';\n\n// class Header extends Component {\n  //   render() {\n       \n  //       return (      \n  //       <div className=\"Header\">\n  //       <h1>{this.props.title}</h1>\n  //          <h2>{this.props.subtitle}</h2>\n  //       </div>\n  //     );\n  //   }\n  // }\n\n\nconst Header= (props) => {\n      return (      \n      <div className=\"header\">\n      <div className = \"container\">\n      <h1 className=\"header__title\">{props.title}</h1>\n      {props.subtitle && <h2 className=\"header__subtitle\">{props.subtitle}</h2>}\n      </div>\n      </div>\n    );\n};\n Header.defaultProps = {\n title : \"Indecision\"\n };  \n  export default Header;","import React from 'react';\n// class Action extends Component {\n//   render() {\n//     return (      \n//       <div className=\"Action\">\n//          <button\n//          disabled = {!this.props.hasOptions}\n//          onClick = {this.props.handlePick}\n//          >\n//          What should I do?\n//          </button>\n      \n//       </div>\n//     );\n//   }\n// }\n\n// stateless functional Component:\nconst Action =(props) => {\n      return (      \n        <div className=\"Action\">\n           <button\n           className=\"big_button\"\n           disabled = {!props.hasOptions}\n           onClick = {props.handlePick}\n           >\n           What should I do?\n           </button>\n        \n        </div>\n      );\n  }\n  \n  export default Action;","import React from 'react';\n\nconst Option =(props) => {\n      return (      \n        <div className=\"option\">\n        <p className =\"option--text\">{props.count}. {props.optionText}</p>\n         <button \n         className=\" button button--link\"\n         onClick = {(e) => {\n           props.handleDeleteOption(props.optionText);\n         }}\n         >\n         Remove\n         </button>\n        </div>\n      );\n  }\n  \n  export default Option;","import React from 'react';\nimport Option from \"./option\"\n// class Options extends Component {\n//   render() {\n//     return (      \n//       <div className=\"Options\">\n//       <button onClick ={this.props.handleDeleteAll}>Remove All</button>\n//       {\n//       this.props.options.map((option) =>\n//       <Option key = {option} optionText = {option} />)\n//       }\n      \n//       </div>\n//     );\n//   }\n// }\n\n// stateless functional Component:\nconst Options = (props) => {\n      return (      \n        <div className=\"Options\">\n        <div className=\"widget-header\">\n        <h3 className=\"widget--title\">Your Options</h3>\n        <button className=\"button--link\" onClick ={props.handleDeleteAll}>Remove All</button>\n        </div>\n        {\n        props.options.map((option, index) =>\n        <Option\n        handleDeleteOption= {props.handleDeleteOption} \n        key = {option} optionText = {option} \n        count = { index+1 }\n         />)\n        }\n        \n        </div>\n      );\n  }\n  \n  export default Options;","import React, { Component } from 'react';\n\n\nclass Input extends Component {\n  constructor(props) {\n   super(props);\n   this.handleAddOption = this.handleAddOption.bind(this);\n   this.state = {\n     error : undefined\n   };\n  }  \n  handleAddOption (e) {\n        e.preventDefault();\n        const option = e.target.elements.option.value.trim();\n        const error = this.props.handleAddOption(option);\n      this.setState(() => ({error}));\n\n      if(!error) {\n        e.target.elements.option.value = \"\";\n      }\n    }\n    render() {\n      return (      \n        <div className=\"Input\">\n        {this.state.error && <p className=\"widget--message\">{this.state.error}</p>}\n        <form className=\"add-option\" onSubmit = {this.handleAddOption}>\n        <input className=\"add-option--input\" type =\"text\" name=\"option\" />\n         <button\n          className=\"button\"\n          >\n          Submit\n          </button>\n        </form>\n        </div>\n      );\n    }\n  }\n  \n  export default Input;","import React from 'react';\nimport Modal from 'react-modal';\n\nconst OptionModal =(props) => {\nreturn (\n    <div>\n      <Modal\n           isOpen={!!props.selectedOption}\n           onRequestClose = {props.handleRemoveModal}\n           contentLabel = \"selected Option\"\n           closeTimeoutMS={200}\n           className=\"modal\"\n           >\n           <h3 className=\"modal__title\">Selected Option</h3>\n           {props.selectedOption && <p className=\"modal__body\">{props.selectedOption}</p>}\n           <button\n           className=\"button\"\n           onClick = {props.handleRemoveModal}\n           >Okay</button>\n      </Modal>\n    </div>\n)\n};\n\nexport default OptionModal;","import React, { Component } from 'react';\nimport Header from \"./header\"\nimport Action from \"./action\"\nimport Options from \"./options\"  \nimport Input from \"./submit\"\nimport OptionModal from \"./Option.modal\"\nimport \"normalize.css/normalize.css\"\nimport './App.scss';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n   this.handleDeleteAll = this.handleDeleteAll.bind(this);\n   this.handlePick = this.handlePick.bind(this);\n   this.handleAddOption = this.handleAddOption.bind(this);\n   this.handleDeleteOption = this.handleDeleteOption.bind(this);\n   this.handleRemoveModal  = this.handleRemoveModal.bind(this);\n    this.state = {\n      options : [],\n      selectedOption :undefined\n    }\n  }\n  \n  handleDeleteAll() {\n this.setState(() => ({options:[]}));\n}\n  componentDidMount() {\n    const json = localStorage.getItem(\"options\");\n    const options = JSON.parse(json);\n    if(options) {\n      this.setState(() => ({options}));\n    }\n    \n  }\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.options.length !== this.state.options.length) {\n      const json = JSON.stringify(this.state.options);\n      localStorage.setItem(\"options\", json);\n    }   \n  }\n  componentWillUnmount() {\n    console.log(\"component will unmount\");\n  }\n \n  handleDeleteOption(optionToRemove) {\n    this.setState((prevState)=> ({\n      options:prevState.options.filter((option) => optionToRemove !== option)\n    }));\n  }\n  \n  handlePick () {\n    const randomNum = Math.floor(Math.random() * this.state.options.length);\n     const option = this.state.options[randomNum];\n     this.setState(() => ({ \n      selectedOption : option\n       }));\n  }\n\n  handleAddOption (option) {\n   if(!option){\n     return \"Enter a valid option.\"\n   }else if (this.state.options.indexOf(option) > -1) {\n     return \"This option already exists.\"\n   }\n   \n    this.setState((prevState) => ({options : prevState.options.concat(option)}))\n  }\n\n  handleRemoveModal= () => {\n    this.setState(() => ({ \n      selectedOption : undefined\n       }));\n  }\n  \n  render() {\n    const subtitle = \"Give your life in the hands of Computer\";\n    return (      \n      <div className=\"App\">\n     <Header subtitle = {subtitle} />\n      <div className=\"container\" >\n         <Action \n         hasOptions= {this.state.options.length > 0}\n         handlePick = {this.handlePick} \n         />\n          <div className=\"widget\">\n         <Options\n          options={this.state.options}\n          handleDeleteAll ={this.handleDeleteAll}\n          handleDeleteOption ={this.handleDeleteOption}\n          />\n         <Input handleAddOption = {this.handleAddOption} />\n         </div>\n         </div>\n      <OptionModal \n         selectedOption = {this.state.selectedOption}\n         handleRemoveModal = {this.handleRemoveModal}\n         />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}